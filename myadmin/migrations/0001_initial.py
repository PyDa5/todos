# Generated by Django 4.0.4 on 2022-05-16 15:01

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='TContentType',
            fields=[
                ('id', models.AutoField(db_column='id', help_text='ID', primary_key=True, serialize=False)),
                ('app_label', models.CharField(db_column='app_label', help_text='app_label', max_length=100)),
                ('model', models.CharField(db_column='model', help_text='视图或者数据库模型', max_length=100)),
            ],
            options={
                'db_table': 't_content_type',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TGroup',
            fields=[
                ('id', models.AutoField(help_text='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='name', help_text='组名', max_length=150)),
            ],
            options={
                'db_table': 't_group',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TIFrameSrc',
            fields=[
                ('path', models.CharField(db_column='path', help_text='IFrame路由', max_length=255, primary_key=True, serialize=False, unique=True)),
                ('desc', models.CharField(db_column='desc', help_text='URL地址说明', max_length=50)),
            ],
            options={
                'verbose_name_plural': '路由表',
                'db_table': 't_iframe_src',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TMenu',
            fields=[
                ('id', models.IntegerField(auto_created=True, db_column='id', help_text='菜单ID', primary_key=True, serialize=False)),
                ('title', models.CharField(db_column='title', help_text='菜单标题', max_length=10, null=True, unique=True)),
            ],
            options={
                'verbose_name_plural': '添加主菜单',
                'db_table': 't_menu',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TSession',
            fields=[
                ('id', models.AutoField(db_column='id', help_text='ID', primary_key=True, serialize=False)),
                ('session_key', models.CharField(db_column='session_key', help_text='会话Key', max_length=40)),
                ('session_data', models.TextField(db_column='session_data', help_text='会话数据')),
            ],
            options={
                'db_table': 't_session',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TSubMenu',
            fields=[
                ('id', models.AutoField(help_text='子菜单ID', primary_key=True, serialize=False)),
                ('title', models.CharField(db_column='title', help_text='子菜单标题', max_length=10)),
                ('menu', models.ForeignKey(db_column='menu_id', db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to='myadmin.tmenu')),
                ('path', models.ForeignKey(db_column='path', db_constraint=False, help_text='子菜单路由', on_delete=django.db.models.deletion.CASCADE, to='myadmin.tiframesrc')),
            ],
            options={
                'verbose_name_plural': '添加子菜单',
                'db_table': 't_submenu',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TUser',
            fields=[
                ('id', models.AutoField(db_column='id', help_text='ID', primary_key=True, serialize=False)),
                ('username', models.CharField(db_column='username', help_text='用户名', max_length=150, unique=True)),
                ('password', models.CharField(db_column='password', help_text='密码', max_length=128)),
                ('email', models.EmailField(db_column='email', help_text='邮箱', max_length=254, unique=True)),
                ('phone_number', models.CharField(db_column='phone_number', help_text='手机号', max_length=20, unique=True)),
                ('first_name', models.CharField(db_column='first_name', help_text='first name', max_length=150)),
                ('last_name', models.CharField(db_column='last_name', help_text='last name', max_length=150)),
                ('is_superuser', models.BooleanField(db_column='is_superuser', default=False, help_text='是否超级管理员')),
                ('is_staff', models.BooleanField(db_column='is_staff', default=False, help_text='是否内部员工')),
                ('is_active', models.BooleanField(db_column='is_active', default=True, help_text='是否启用账户')),
                ('date_joined', models.DateTimeField(auto_now_add=True, db_column='date_joined', help_text='加入日期')),
                ('last_login', models.DateTimeField(db_column='last_login', help_text='上次登陆日期', null=True)),
            ],
            options={
                'db_table': 't_user',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TUserUserPermission',
            fields=[
                ('id', models.AutoField(db_column='id', help_text='ID', primary_key=True, serialize=False)),
                ('user', models.ForeignKey(db_column='user_id', db_constraint=False, help_text='用户ID', on_delete=django.db.models.deletion.CASCADE, to='myadmin.tuser')),
            ],
            options={
                'db_table': 't_user_user_permissions',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TUserSubmenu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submenu', models.ForeignKey(db_column='submenu_id', db_constraint=False, help_text='子菜单ID', on_delete=django.db.models.deletion.CASCADE, to='myadmin.tsubmenu')),
                ('user', models.ForeignKey(db_column='user_id', db_constraint=False, help_text='用户ID', on_delete=django.db.models.deletion.CASCADE, to='myadmin.tuser')),
            ],
            options={
                'verbose_name_plural': '设置个人菜单',
                'db_table': 't_user_submenu',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TUserGroup',
            fields=[
                ('id', models.AutoField(db_column='id', help_text='ID', primary_key=True, serialize=False)),
                ('group', models.ForeignKey(db_column='group_id', db_constraint=False, help_text='用户组', on_delete=django.db.models.deletion.CASCADE, to='myadmin.tgroup')),
                ('user', models.ForeignKey(db_column='user_id', db_constraint=False, help_text='用户名', on_delete=django.db.models.deletion.CASCADE, to='myadmin.tuser')),
            ],
            options={
                'db_table': 't_user_groups',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TPermission',
            fields=[
                ('id', models.AutoField(db_column='id', help_text='ID', primary_key=True, serialize=False)),
                ('codename', models.CharField(db_column='codename', help_text='权限编码', max_length=100)),
                ('name', models.CharField(db_column='name', help_text='权限名称', max_length=100)),
                ('content_type', models.ForeignKey(db_column='content_type_id', db_constraint=False, help_text='模型或视图对象', on_delete=django.db.models.deletion.CASCADE, to='myadmin.tcontenttype')),
            ],
            options={
                'db_table': 't_permission',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TGroupSubmenu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.ForeignKey(db_column='group_id', db_constraint=False, help_text='分组ID', on_delete=django.db.models.deletion.RESTRICT, to='myadmin.tgroup')),
                ('submenu', models.ForeignKey(db_column='submenu_id', db_constraint=False, help_text='子菜单ID', on_delete=django.db.models.deletion.RESTRICT, to='myadmin.tusersubmenu')),
            ],
            options={
                'verbose_name_plural': '设置分组菜单',
                'db_table': 't_group_submenu',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TGroupPermission',
            fields=[
                ('id', models.AutoField(db_column='id', help_text='ID', primary_key=True, serialize=False)),
                ('group', models.ForeignKey(db_column='group_id', db_constraint=False, help_text='分组ID', on_delete=django.db.models.deletion.CASCADE, to='myadmin.tgroup')),
                ('user', models.ForeignKey(db_column='user_id', db_constraint=False, help_text='用户ID', on_delete=django.db.models.deletion.CASCADE, to='myadmin.tuser')),
            ],
            options={
                'db_table': 't_group_permission',
                'managed': True,
            },
        ),
    ]
